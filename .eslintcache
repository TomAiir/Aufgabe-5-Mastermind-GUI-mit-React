[{"/Users/tomair/Documents/VIS/3.Semester/Web 1/mastermind-react/src/index.js":"1","/Users/tomair/Documents/VIS/3.Semester/Web 1/mastermind-react/src/App.js":"2","/Users/tomair/Documents/VIS/3.Semester/Web 1/mastermind-react/src/reportWebVitals.js":"3","/Users/tomair/Documents/VIS/3.Semester/Web 1/mastermind-react/src/Pin/Pin.js":"4","/Users/tomair/Documents/VIS/3.Semester/Web 1/mastermind-react/src/model/model.js":"5","/Users/tomair/Documents/VIS/3.Semester/Web 1/mastermind-react/src/Round/Round.js":"6"},{"size":500,"mtime":1611844184578,"results":"7","hashOfConfig":"8"},{"size":1218,"mtime":1612562713419,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611844184579,"results":"10","hashOfConfig":"8"},{"size":443,"mtime":1612106361781,"results":"11","hashOfConfig":"8"},{"size":1613,"mtime":1612559322881,"results":"12","hashOfConfig":"8"},{"size":435,"mtime":1612561576824,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"14a2qtu",{"filePath":"17","messages":"18","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tomair/Documents/VIS/3.Semester/Web 1/mastermind-react/src/index.js",[],["28","29"],"/Users/tomair/Documents/VIS/3.Semester/Web 1/mastermind-react/src/App.js",["30"],"/Users/tomair/Documents/VIS/3.Semester/Web 1/mastermind-react/src/reportWebVitals.js",[],"/Users/tomair/Documents/VIS/3.Semester/Web 1/mastermind-react/src/Pin/Pin.js",[],"/Users/tomair/Documents/VIS/3.Semester/Web 1/mastermind-react/src/model/model.js",["31","32","33","34","35","36"],"import { FITS, PARTIALLY, NOT_AT_ALL} from \"Aufgabe-4-MasterMind-Business-Logic/src/hints\";\nimport {cloneDeep} from 'lodash';\nimport * as defaultLogic from 'Aufgabe-4-MasterMind-Business-Logic/src/mastermind';\nimport * as colors from 'Aufgabe-4-MasterMind-Business-Logic/src/colors';\nconst  {RED, BLUE, YELLOW, GREEN} = colors;\n\n\nexport function initialModel(logic = defaultLogic) {\n    const randomFn = () => Math.random();\n    const randomCode = logic.generateCode(randomFn);\n    return {\n        assumedColors: [RED, RED, RED, RED],\n        rounds: [],\n        code: randomCode\n    }\n}\n\nexport const checkRandom = () => {\n    return Math.floor(Math.random() * Math.floor(3));\n}\n\n\n\nexport function createModel(model, setModel, logic = defaultLogic) {\n    return {\n        getAssumedColor: (index) => model.assumedColors[index],\n        changeColor: (index) => {\n            const newModel = cloneDeep(model)\n            let colorList = Object.keys(colors)\n            colorList = colorList.slice(0, colorList.length-1)\n            const colorIndex = colorList.findIndex((c) => {return model.assumedColors[index] === c})\n            const newColorIndex = (colorIndex < colorList.length-1)? colorIndex + 1 : 0;\n\n            newModel.assumedColors[index] = colorList[newColorIndex];\n            setModel(newModel);\n        },\n        check: () => {\n            const newModel = cloneDeep(model)\n            newModel.rounds.push({\n                round: 1,\n                assumedColors: model.assumedColors,\n                result: logic.checkCode()\n            })\n            setModel(newModel)\n        }\n\n    }\n}","/Users/tomair/Documents/VIS/3.Semester/Web 1/mastermind-react/src/Round/Round.js",["37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":null,"fatal":true,"severity":2,"message":"42","line":30,"column":3},{"ruleId":"43","severity":1,"message":"44","line":1,"column":10,"nodeType":"45","messageId":"46","endLine":1,"endColumn":14},{"ruleId":"43","severity":1,"message":"47","line":1,"column":16,"nodeType":"45","messageId":"46","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"48","line":1,"column":27,"nodeType":"45","messageId":"46","endLine":1,"endColumn":37},{"ruleId":"43","severity":1,"message":"49","line":5,"column":14,"nodeType":"45","messageId":"46","endLine":5,"endColumn":18},{"ruleId":"43","severity":1,"message":"50","line":5,"column":20,"nodeType":"45","messageId":"46","endLine":5,"endColumn":26},{"ruleId":"43","severity":1,"message":"51","line":5,"column":28,"nodeType":"45","messageId":"46","endLine":5,"endColumn":33},{"ruleId":"52","severity":2,"message":"53","line":10,"column":7,"nodeType":"45","endLine":10,"endColumn":16},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 28 | \u001b[39m      \u001b[33m<\u001b[39m\u001b[33mPin\u001b[39m color\u001b[33m=\u001b[39m{round\u001b[33m.\u001b[39massumedColors[\u001b[35m3\u001b[39m]} change\u001b[33m=\u001b[39m{()\u001b[33m=>\u001b[39m { }}\u001b[33m>\u001b[39m\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mPin\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 29 | \u001b[39m      \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 | \u001b[39m  })}\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 31 | \u001b[39m  \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 32 | \u001b[39m  \u001b[0m\n\u001b[0m \u001b[90m 33 | \u001b[39m  \u001b[0m","no-unused-vars","'FITS' is defined but never used.","Identifier","unusedVar","'PARTIALLY' is defined but never used.","'NOT_AT_ALL' is defined but never used.","'BLUE' is assigned a value but never used.","'YELLOW' is assigned a value but never used.","'GREEN' is assigned a value but never used.","react/no-typos","Typo in static class property declaration","no-global-assign","no-unsafe-negation"]